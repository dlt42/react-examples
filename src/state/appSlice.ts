import { createSlice } from '@reduxjs/toolkit'
import type { PayloadAction } from '@reduxjs/toolkit'
import { RootState } from './store';

export type CountryCode = string | null;

export type Country = {
  key: string,
  name: string,
  capital: string,
  region: string,
  subregion: string,
  population: number,
  alpha3Code: CountryCode
  flag: string,
  altSpellings: string[],
  shortName: string
}

export type Countries = {
  items: Country[]
}

export type AppState = {
  appName: string | null;
  countries: Countries;
  highlightCountryCode: CountryCode;
}

const initialState: AppState = {
  appName: null,
  countries: {
    items: []
  },
  highlightCountryCode: null
}

export const appSlice = createSlice({
  name: 'app',
  initialState: initialState,
  reducers: {
    setAppName: (state: AppState, action: PayloadAction<string>) => {
      const name: string = action.payload;
      state.appName = name;
    },
    setCountries: (state: AppState, action: PayloadAction<Countries>) => {
      const countries: Countries = action.payload;
      state.countries = countries;
    },
    setHighlightCountryCode: (state: AppState, action: PayloadAction<CountryCode>) => {
      const highlightCountryCode: CountryCode = action.payload;
      state.highlightCountryCode = highlightCountryCode;
    }
  }
})

// Actions are generated by createSlice for each reducer 
export const { 
  setAppName,
  setCountries,
  setHighlightCountryCode
} = appSlice.actions

// Convenience for accessing state attributes
export const selectAppName = (state: RootState) => state.app.appName;
export const selectCountries = (state: RootState) => state.app.countries;
export const selectHighlightCountryCode = (state: RootState) => state.app.highlightCountryCode;

export default appSlice.reducer